{"version":3,"sources":["components/colorBox.js","components/gameEndModal.js","components/gameboard.js","components/peg.js","components/pegboard.js","components/sidebar.js","components/header.js","components/game.js","serviceWorker.js","index.js"],"names":["ColorBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dropMargin","onStart","answer","setState","beingDragged","onStop","event","preventDefault","stopPropagation","focusedBox","colorBox","current","getBoundingClientRect","sidebar","onDrop","x","y","color","name","React","createRef","state","nextProps","_this$colorBox$curren","withinX","Math","abs","activeDraggable","withinY","updateValue","boxStyles","backgroundColor","width","height","zIndex","position","borderRadius","marginBottom","react_default","a","createElement","react_draggable_default","ref","className","style","Component","GameEndModal","renderAnswer","answerValue1","answerValue2","answerValue3","answerValue4","showHide","show","win","href","onClick","resetGame","GameBoard","renderColorBoxes","keys","selectedValues","map","key","Peg","pegColor","peg","concat","Pegboard","renderBlackPegs","modifiedResults","result","blackPegs","addPegs","renderWhitePegs","whitePegs","pegsArray","numPegs","i","push","toConsumableArray","results","Sidebar","createBoxes","box","id","Header","Game","defaultGameBoard","selectedValue1","selectedValue2","selectedValue3","selectedValue4","defaultDraggable","nextTurn","gameBoards","turn","length","showEndScreen","genAnswer","value","newActiveBoard","objectSpread","newBoards","colorList","answers","floor","random","console","log","checkAnswer","values","guess","pegs","index","guessindex","answerindex","renderGameBoards","boardAnswer","gameboard","active","header","pegboard","gameEndModal","Boolean","window","location","hostname","match","ReactDOM","render","game","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c69bebf5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Draggable from 'react-draggable'\r\n\r\nclass ColorBox extends Component {\r\n  dropMargin = 200;\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.colorBox = React.createRef()\r\n    this.state = {\r\n      beingDragged: false\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // Checks to see whether or not the draggable box is within the dropMargin of any specific box\r\n    if (nextProps.sidebar) {\r\n      return\r\n    }\r\n    const { x, y } = this.colorBox.current.getBoundingClientRect()\r\n    const withinX = Math.abs(nextProps.activeDraggable.x - x) < this.dropMargin || Math.abs(x - nextProps.activeDraggable.x) < this.dropMargin;\r\n    const withinY = Math.abs(nextProps.activeDraggable.y - y) < this.dropMargin || Math.abs(y - nextProps.activeDraggable.y) < this.dropMargin;\r\n    if (withinX && withinY && nextProps.activeDraggable.name !== nextProps.name) {\r\n      nextProps.updateValue(nextProps.name, nextProps.activeDraggable.color)\r\n    }\r\n  }\r\n\r\n  onStart = () => {\r\n    if (this.props.answer) {\r\n      return false\r\n    } else {\r\n      this.setState({beingDragged: true})\r\n    }\r\n  }\r\n\r\n  onStop = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const focusedBox = this.colorBox.current.getBoundingClientRect()\r\n    this.setState({beingDragged: false})\r\n    if(this.props.sidebar) {\r\n      this.props.onDrop(focusedBox.x, focusedBox.y, this.props.color)\r\n    } else {\r\n      this.props.onDrop(focusedBox.x, focusedBox.y, this.props.color, this.props.name)\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let boxStyles = {\r\n      backgroundColor: this.props.color,\r\n      width: this.props.width,\r\n      height: this.props.width,\r\n      zIndex: this.state.beingDragged ? 100 : 0,\r\n      position: 'relative',\r\n      borderRadius: '10px',\r\n      marginBottom: this.props.sidebar ? '10px': ''\r\n    }\r\n    return (\r\n      <Draggable position={{x: 0, y: 0}} onStart={this.onStart} onStop={this.onStop}>\r\n        <div\r\n          ref={this.colorBox}\r\n          className={'colorbox'}\r\n          style={boxStyles}>\r\n        </div>\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorBox;","import React, { Component } from 'react';\r\nimport ColorBox from './colorBox';\r\n\r\nclass GameEndModal extends Component {\r\n  \r\n  renderAnswer = () => {\r\n    return( // Change this to use a single map function like in gameboard.js\r\n      <div className='results'>\r\n        <div className='results__title'>Answer:</div>\r\n        <div className = 'results__colorbox-wrapper'>\r\n          <div className = 'results__colorbox-wrapper-colorbox'>  \r\n            <ColorBox\r\n              color={this.props.answer.answerValue1}\r\n              width='30px'\r\n              activeDraggable={{x:-10000, y:-1000, color:null}}\r\n              answer={true}\r\n            />\r\n          </div>\r\n          <div className = 'results__colorbox-wrapper-colorbox'> \r\n            <ColorBox\r\n              color={this.props.answer.answerValue2}\r\n              width='30px'\r\n              activeDraggable={{x:-10000, y:-1000, color:null}}\r\n              answer={true}\r\n            />\r\n          </div>\r\n          <div className = 'results__colorbox-wrapper-colorbox'> \r\n            <ColorBox\r\n              color={this.props.answer.answerValue3}\r\n              width='30px'\r\n              activeDraggable={{x:-10000, y:-1000, color:null}}\r\n              answer={true}\r\n            />\r\n          </div>\r\n          <div className = 'results__colorbox-wrapper-colorbox'> \r\n            <ColorBox\r\n              color={this.props.answer.answerValue4}\r\n              width='30px'\r\n              activeDraggable={{x:-10000, y:-1000, color:null}}\r\n              answer={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let showHide = this.props.show ? 'modal display-block' : 'modal display-none';\r\n    return (\r\n      <div className={showHide}>\r\n        <div className = 'modal__main'>\r\n          <h2 className = 'modal__main-title'>{this.props.win ? 'YOU WON!' : 'YOU LOST!'}</h2>\r\n          <div className = 'modal__main-results'>\r\n            {this.renderAnswer()}\r\n          </div>\r\n          <div className = 'modal__main-buttons'>\r\n            <a href = '/'><button className = 'modal__main-buttons-button'>Main Page</button></a>\r\n            <button className = 'modal__main-buttons-button' onClick={this.props.resetGame}>Play Again?</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameEndModal;","import React, { Component } from 'react';\r\nimport ColorBox from './colorBox';\r\n\r\nclass GameBoard extends Component {\r\n\r\n  renderColorBoxes = () => {\r\n    return Object.keys(this.props.selectedValues).map(key => {\r\n      return (\r\n        <div className=\"gameboard-colorbox-background\">\r\n          <ColorBox\r\n            name={key}\r\n            key={key}\r\n            color={this.props.selectedValues[key]}\r\n            updateValue={this.props.updateValue}\r\n            activeDraggable={this.props.activeDraggable}\r\n            width='150px'\r\n            onDrop={this.props.onDrop}\r\n          />\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className = 'gameboard-colorbox-wrapper'> \r\n        {this.renderColorBoxes()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameBoard;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Peg extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pegColor: this.pegColor()\r\n    }\r\n  }\r\n    \r\n\r\n  pegColor = () => {\r\n    if (this.props.peg === 'whitepeg') {\r\n      return 'white'\r\n    } else if (this.props.peg === 'blackpeg') {\r\n      return 'black'\r\n    } else {\r\n      return 'empty'\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = {`pegrow__peg ${'pegrow__peg-' + this.state.pegColor}`}></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Peg;","import React, { Component } from 'react';\r\nimport Peg from './peg';\r\n\r\nclass Pegboard extends Component {\r\n\r\n  /* RENDERERS */\r\n  \r\n  renderBlackPegs = () => {\r\n    return this.modifiedResults().map(result => {\r\n      let blackPegs = [];\r\n      this.addPegs(blackPegs, result.blackPegs, 'blackpeg')\r\n      this.addPegs(blackPegs, 4 - result.blackPegs, 'empty')\r\n      return blackPegs;\r\n    })\r\n  }\r\n\r\n  renderWhitePegs = () => {\r\n    return this.modifiedResults().map(result => {\r\n      let whitePegs = [];\r\n      this.addPegs(whitePegs, result.whitePegs, 'whitepeg')\r\n      this.addPegs(whitePegs, 4 - result.whitePegs, 'empty')\r\n      return whitePegs;\r\n    })\r\n  }\r\n\r\n  /* HELPERS */\r\n\r\n  addPegs = (pegsArray, numPegs, color) => {\r\n    for (let i = 0; i < numPegs; i++) {\r\n      pegsArray.push(<Peg key = {`${i}${color}`} peg={color}/>)\r\n    }\r\n  }\r\n\r\n  modifiedResults = () => {\r\n    return [...this.props.results, {whitePegs: 0, blackPegs: 0}]\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className = 'pegboard'>\r\n        <div className = 'pegboard__white'>\r\n          <h4 className ='pegboard__title' >WHITE PEGS</h4>\r\n          <div className = 'pegboard__white-pegs'>\r\n            <div className = 'pegrow'>\r\n              {this.renderWhitePegs()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className = 'pegboard__black'>\r\n          <h4 className ='pegboard__title'>BLACK PEGS</h4>\r\n          <div className = 'pegboard__black-pegs'>\r\n            <div className = 'pegrow'>\r\n              {this.renderBlackPegs()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pegboard;","import React, { Component } from 'react';\r\nimport ColorBox from './colorBox';\r\n\r\n\r\nclass Sidebar extends Component {\r\n\r\n  createBoxes = () => {\r\n    const colorOptions = [\r\n        {\r\n          name: 'blue',\r\n          color: 'blue'\r\n        },\r\n        {\r\n          name: 'red',\r\n          color: 'red'\r\n        },\r\n        {\r\n          name: 'green',\r\n          color: 'green'\r\n        },\r\n        {\r\n          name: 'orange',\r\n          color: 'orange'\r\n        },\r\n        {\r\n          name: 'pink',\r\n          color: 'pink'\r\n        },\r\n        {\r\n          name: 'purple',\r\n          color: 'purple'\r\n        },\r\n        {\r\n          name: 'yellow',\r\n          color: 'yellow'\r\n        }\r\n    ]\r\n\r\n    return colorOptions.map(box =>  {\r\n      return <ColorBox\r\n          key={box.name}\r\n          name={box.name}\r\n          id={box.name}\r\n          color={box.color}\r\n          width={'100px'}\r\n          onDrop={this.props.onDrop}\r\n          sidebar={true}\r\n        />\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className='colorbox-wrapper'>\r\n          {this.createBoxes()}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className='header'>\r\n        <div className='header__title'>MASTER MIND</div>\r\n        <a href = '/' className ='header__subtitle'>{'< BACK TO MAIN PAGE'}</a>\r\n        <a href = 'https://en.wikipedia.org/wiki/Mastermind_(board_game)#Gameplay_and_rules' className ='header__subtitle'>MASTER MIND'S RULES</a>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport GameEndModal from './gameEndModal';\r\nimport GameBoard from './gameboard';\r\nimport Pegboard from './pegboard';\r\nimport Sidebar from './sidebar';\r\nimport Header from './header';\r\n\r\n\r\nclass Game extends Component {\r\n  defaultGameBoard = {\r\n    selectedValue1: 'white',\r\n    selectedValue2: 'white',\r\n    selectedValue3: 'white',\r\n    selectedValue4: 'white',\r\n  }\r\n\r\n  defaultDraggable = {\r\n    x: -100000, \r\n    y: -100000, \r\n    color: null\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      answer : this.genAnswer(),\r\n      gameBoards: [this.defaultGameBoard],\r\n      results: [],\r\n      activeDraggable: this.defaultDraggable,\r\n      turn: 0, // tell the player how many turns they have left somewhere\r\n      showEndScreen: false,\r\n      win: null\r\n    }\r\n  }\r\n  \r\n  /* HELPERS */\r\n\r\n  nextTurn = () => { \r\n    this.setState({gameBoards: [...this.state.gameBoards, this.defaultGameBoard], turn: this.state.turn + 1}, () => {\r\n      if (this.state.results[this.state.results.length - 1].blackPegs === 4) {\r\n        this.setState({showEndScreen: true, win: true})\r\n      }\r\n      else if (this.state.turn === 12) { \r\n        this.setState({showEndScreen: true, win: false})\r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  resetGame = () => {\r\n    this.setState({answer: this.genAnswer(), gameBoards: [this.defaultGameBoard], results: [], turn: 0, showEndScreen: false, win: null}) // add a default state variable and throw all this in there\r\n  }\r\n\r\n  updateValue = (key, value) => {\r\n    let newActiveBoard = { ...this.state.gameBoards[this.state.gameBoards.length-1]};\r\n    newActiveBoard[key] = value;\r\n    if (this.state.activeDraggable.name && this.state.activeDraggable.name !== key) {\r\n      newActiveBoard[this.state.activeDraggable.name] = \"white\";\r\n    }\r\n    let newBoards = [...this.state.gameBoards];\r\n    newBoards[newBoards.length-1] = newActiveBoard;\r\n    this.setState({gameBoards: newBoards, activeDraggable: this.defaultDraggable});\r\n  }\r\n\r\n  genAnswer = () => {\r\n    let colorList = ['red', 'green', 'orange', 'purple', 'blue', 'yellow'] \r\n    let answers = {answerValue1: null, answerValue2: null, answerValue3: null, answerValue4: null}\r\n    for (var key in answers) {\r\n      answers[key] = colorList[Math.floor(Math.random() * 6)];\r\n    }\r\n    console.log(answers)\r\n    return answers;\r\n  }\r\n  \r\n  checkAnswer = () => {\r\n    const answer =  Object.values(this.state.answer);\r\n    const guess = Object.values(this.state.gameBoards[this.state.gameBoards.length-1]);\r\n    let pegs = [null, null, null, null]\r\n    let blackPegs = 0;\r\n    let whitePegs = 0;\r\n    \r\n    // Adds blackPegs\r\n    for (let index = 0; index < guess.length; index++) {\r\n      if (answer[index] === guess[index]) {\r\n        pegs[index] = 'black';\r\n        blackPegs++;\r\n      }\r\n    }\r\n    // Adds whitePegs\r\n    for (let guessindex = 0; guessindex < guess.length; guessindex++) {\r\n      for (let answerindex = 0; answerindex < 4; answerindex++) {\r\n        if (answer[answerindex] === guess[guessindex] && pegs[answerindex] === null) {\r\n          whitePegs++;\r\n          pegs[answerindex] = 'white'\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.setState({results: [...this.state.results, {blackPegs, whitePegs}]}, () => {this.nextTurn()})\r\n  }\r\n\r\n  onDrop = (x, y, color, name) => {\r\n    this.setState({activeDraggable: {x, y, color, name}})\r\n  }\r\n\r\n  /* RENDERERS */\r\n\r\n  renderGameBoards = () => {\r\n    return this.state.gameBoards.map((boardAnswer, i) => {\r\n      return (\r\n        <GameBoard\r\n          key={i} \r\n          selectedValues={boardAnswer}\r\n          active={i === this.state.gameBoards.length - 1} \r\n          updateValue={this.updateValue}\r\n          activeDraggable={this.state.activeDraggable}\r\n          onDrop={this.onDrop}\r\n        />\r\n      )\r\n    })  \r\n  } \r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className='game__header'>\r\n          <Header/>\r\n        </div>\r\n        <div className='game__sidebar'>\r\n          <Sidebar onDrop={this.onDrop}/>\r\n        </div>\r\n\r\n        <div className=\"game__colorboard\">\r\n          {this.renderGameBoards()}\r\n          <button className = 'game__submit' onClick = {this.checkAnswer}>Submit</button>\r\n          <div className = 'clip-path-mastermind'></div>\r\n          <div className = 'clip-path-mastermind-border'></div>\r\n        </div>\r\n\r\n        <div className=\"game__pegboard\">\r\n          <Pegboard \r\n            results={this.state.results}\r\n          />\r\n        </div>\r\n        <GameEndModal\r\n          show = {this.state.showEndScreen}\r\n          win = {this.state.win}\r\n          resetGame = {this.resetGame}\r\n          answer = {this.state.answer}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport Game from './components/game';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}